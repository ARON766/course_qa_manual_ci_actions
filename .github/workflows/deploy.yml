name: Deploy to PythonAnywhere

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Шаг для тестирования
      - name: Run tests
        run: |
          python manage.py test

      # Архивация файлов проекта
      - name: Archive project files
        run: zip -r project_archive.zip . -x ".git/*"

      # Загрузка архива на PythonAnywhere
      - name: Upload archive to PythonAnywhere
        env:
          PYTHONANYWHERE_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
          PYTHONANYWHERE_USERNAME: ${{ secrets.PYTHONANYWHERE_USERNAME }}
        run: |
          UPLOAD_URL="https://www.pythonanywhere.com/api/v0/user/$PYTHONANYWHERE_USERNAME/files/path/home/$PYTHONANYWHERE_USERNAME/weather_proj/project_archive.zip"
          echo "Uploading project_archive.zip to $UPLOAD_URL..."
          curl -s -w "\nHTTP_CODE:%{http_code}" \
            -X POST \
            -H "Authorization: Token $PYTHONANYWHERE_API_TOKEN" \
            -F "content=@project_archive.zip" \
            "$UPLOAD_URL"

      # Распаковка архива
      - name: Extract archive on PythonAnywhere
        env:
          PYTHONANYWHERE_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
          PYTHONANYWHERE_USERNAME: ${{ secrets.PYTHONANYWHERE_USERNAME }}
          CONSOLE_ID: ${{ secrets.CONSOLE_ID }}
        run: |
          UNZIP_URL="https://www.pythonanywhere.com/api/v0/user/$PYTHONANYWHERE_USERNAME/consoles/$CONSOLE_ID/send_input/"
          echo "Extracting archive..."
          curl -s -w "\nHTTP_CODE:%{http_code}" \
            -X POST \
            -H "Authorization: Token $PYTHONANYWHERE_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"input":"unzip -o /home/'"$PYTHONANYWHERE_USERNAME"'/weather_proj/project_archive.zip -d /home/'"$PYTHONANYWHERE_USERNAME"'/weather_proj/\n"}' \
            "$UNZIP_URL"

      # Выполнение миграций
      - name: Apply migrations
        env:
          PYTHONANYWHERE_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
          PYTHONANYWHERE_USERNAME: ${{ secrets.PYTHONANYWHERE_USERNAME }}
          CONSOLE_ID: ${{ secrets.CONSOLE_ID }}
        run: |
          MIGRATE_URL="https://www.pythonanywhere.com/api/v0/user/$PYTHONANYWHERE_USERNAME/consoles/$CONSOLE_ID/send_input/"
          echo "Applying migrations..."
          curl -s -w "\nHTTP_CODE:%{http_code}" \
            -X POST \
            -H "Authorization: Token $PYTHONANYWHERE_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"input":"cd /home/'"$PYTHONANYWHERE_USERNAME"'/weather_proj && python manage.py migrate\n"}' \
            "$MIGRATE_URL"

      # Перезагрузка приложения
      - name: Reload web application
        env:
          PYTHONANYWHERE_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
          PYTHONANYWHERE_USERNAME: ${{ secrets.PYTHONANYWHERE_USERNAME }}
        run: |
          RELOAD_URL="https://www.pythonanywhere.com/api/v0/user/$PYTHONANYWHERE_USERNAME/webapps/$PYTHONANYWHERE_USERNAME.pythonanywhere.com/reload/"
          echo "Reloading web application..."
          curl -s -w "\nHTTP_CODE:%{http_code}" \
            -X POST \
            -H "Authorization: Token $PYTHONANYWHERE_API_TOKEN" \
            "$RELOAD_URL"